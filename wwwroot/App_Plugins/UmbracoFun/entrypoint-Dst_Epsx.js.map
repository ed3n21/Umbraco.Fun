{"version":3,"file":"entrypoint-Dst_Epsx.js","sources":["../../../Client/src/entrypoints/entrypoint.ts"],"sourcesContent":["import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { client } from '../api';\r\n\r\n// load up the manifests here\r\nexport const onInit: UmbEntryPointOnInit = (_host, _extensionRegistry) => {\r\n\r\n  // Do the OAuth token handshake stuff\r\n  _host.consumeContext(UMB_AUTH_CONTEXT, async (authContext) => {\r\n\r\n    // Get the token info from Umbraco\r\n    const config = authContext.getOpenApiConfiguration();\r\n\r\n    client.setConfig({\r\n      baseUrl: config.base,\r\n      credentials: config.credentials\r\n    });\r\n\r\n    // For every request being made, add the token to the headers\r\n    // Can't use the setConfig approach above as its set only once and\r\n    // tokens expire and get refreshed\r\n    client.interceptors.request.use(async (request, _options) => {\r\n      const token = await config.token();\r\n      request.headers.set('Authorization', `Bearer ${token}`);\r\n      return request;\r\n    });\r\n  });\r\n};\r\n"],"names":["onInit","_host","_extensionRegistry","UMB_AUTH_CONTEXT","authContext","config","client","request","_options","token"],"mappings":";;AAKa,MAAAA,IAA8B,CAACC,GAAOC,MAAuB;AAGlE,EAAAD,EAAA,eAAeE,GAAkB,OAAOC,MAAgB;AAGtD,UAAAC,IAASD,EAAY,wBAAwB;AAEnD,IAAAE,EAAO,UAAU;AAAA,MACf,SAASD,EAAO;AAAA,MAChB,aAAaA,EAAO;AAAA,IAAA,CACrB,GAKDC,EAAO,aAAa,QAAQ,IAAI,OAAOC,GAASC,MAAa;AACrD,YAAAC,IAAQ,MAAMJ,EAAO,MAAM;AACjC,aAAAE,EAAQ,QAAQ,IAAI,iBAAiB,UAAUE,CAAK,EAAE,GAC/CF;AAAA,IAAA,CACR;AAAA,EAAA,CACF;AACH;"}